#About
 
##Introduction
Методология Школы 21 способна приводить к высоким образовательным результатам, только если peer-to-peer оценка производится максимально ответственно. Этот документ призван помочь вам в это м.
- Будьте доброжелательными, вежливыми. Относитесь с уважением к другому человеку и проделанной им работе. Будьте конструктивны, давая обратную связь.
- Проверяя работу другого, отмечайте для себя спорные и возможно неверные моменты. Обсудите их с автором решения. Возможно, не правы вы, а не он.
- Старайтесь быть открытыми к другому мнению или способу интерпретировать задание. Возможно, и ваш подход, и подход другого - оба имеют право на жизнь.
 
##Guidelines
 - Подлежат оцениванию только те файлы, которые учащийся или группа выложили в GIT-репозиторий.
- В конце чек-листа есть специальные флаги: EMPTY WORK, если репозиторий пустой или решение запушено не в ветку develop, либо ветка develop отсутствует; INVALID COMPILATION, когда проект не компилируется; CHEAT, если вы уверены, что участник не сам выполнил работу (например, не может объяснить решение). Во всех этих случаях участник получит 0 баллов. В случае отсутствия плагиата, мы призываем всё равно продолжить проверку и попытаться вместе с другим учащимся выяснить проблему, приведшую к неработающему решению
- Убедитесь в том, что вы не перепутали и репозиторий является репозиторием учащегося или группы, которых вы проверяете.
- Если вы сами ещё не закончили работу над заданием, обязательно перечитайте его ещё раз перед проверкой.
 
#Main part                                                  	
 
##Taskl. R&D
- Все необходимые файлы есть в репозитории: nutritionist.py, recipes.py, recipes.ipynb, два CSV-файла и 1 файл с сохраненной моделью.
- На этапе оценки регрессии соблюдены все требования: было попробовано несколько алгоритмов, использован gridsearch, только лучшие модели оценивались на тестовой выборке, были использованы несколько ансамблей, посчитан RMSE для наивного алгоритма.
- На этапе оценки классификации соблюдены все требования: было попробовано несколько алгоритмов, использован gridsearch, только лучшие модели оценивались на тестовой выборке, были использованы несколько ансамблей, посчитан accuracy для наивного алгоритма, сделана вторая бинаризация по классам
 
##Task 2. Main script 
- В выдаче основной программы есть информация об ингредиентах в виде процентов от дневной нормы нутриентов.
- Для всех рецептов собран URL.
- Рецептов, требующих более 5 доп. ингредиентов, нет в рекомендациях.
 
##Task 3. Testing 
- Подайте на вход программе saffron, gin, chile pepper. Модель должна выдать класс 'bad'
- Подайте на вход программе bread, avocado, cheese, garlic. Модель должна выдать класс 'great'
- Подайте на вход программе a, b, с, garlic. Программа должна выдать информацию о том, что похоже, что таких ингредиентов как а, Ь, с - нет в нашей базе.
- Подайте на вход программе bread, avocado, cheese, garlic, saffron, gin, chile pepper, banana, vodka, yogurt, zucchini. Программа должна сообщит ь, что похожих рецептов не найдено.
 
#Bonus part
 
##Task 1. 
- У основной программы появился дополнительный ключ, который передается ей при запуске программы, и инициализирующий режим программы, где она сама предлагает 3 случайных рецепта в качестве меню на день.
- Запустите программу с этим ключом 5 раз. Убедитесь в том, что программа каждый раз выдает примерно разные рецепты, то есть реализовано требование о случайности рецептов.
- Все рецепты по-прежнему выдают информацию о суточной норме потребления ингредиентов, а также имеют ссылки на эти рецепты в интернете.

